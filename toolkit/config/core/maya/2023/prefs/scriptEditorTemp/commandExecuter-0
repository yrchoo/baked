import maya.cmds as cmds
<<<<<<< HEAD
selected = cmds.ls(selection=True)
cameras = [obj for obj in selected if cmds.nodeType(obj) == 'camera']
print (cameras)
=======
import os
path = "/home/rapa/show/baked/AST/Character/desk/MOD/dev/maya/scenes/desk_MOD_v005.mb"
file_path, name = os.path.split(path)
if not os.path.exists(file_path):
    os.makedirs(file_path)
print("hiii")
print(f"name, {name}")
print(file_path)
cmds.file(rename=path)
cmds.file(save=True)




cmds.select("teapot_legShape")
cmds.hyperShade(assign="teapot_v001:aiStandardSurface2")








def collect_shader_assignments():
    """
    셰이더와 오브젝트들을 컬렉션하는 함수.
    """
    shader_dictionary = {}
    shading_groups = cmds.ls(type="shadingEngine")
    for shading_group in shading_groups:
        shader = cmds.ls(cmds.listConnections(shading_group + ".surfaceShader"), materials=True)    
        if not shader:
            continue
        objects = cmds.sets(shading_group, q=True)
        shader_name = shader[0]
        if objects:
            if shader_name not in shader_dictionary:
                shader_dictionary[shader_name] = []
            shader_dictionary[shader_name].extend(objects)
    return shader_dictionary



def export_shader():
    """
    maya에서 오브젝트에 어싸인된 셰이더들을 ma 파일로 익스포트하고,
    그 정보들을 json 파일로 익스포트 하는 함수이다.
    """

    shader_dictionary = collect_shader_assignments()
    export_dir = "/show/4th_academy/assets/char/teapot/lookdev/data"

    for shader, _ in shader_dictionary.items():
        cmds.select(shader, add=True)    

    ma_file_path = f"{export_dir}/shader.ma"
    json_file_path = f"{export_dir}/shader.json"
    
    cmds.file(ma_file_path, exportSelected=True, type="mayaAscii")
    with open(json_file_path, 'w') as f:
        json.dump(shader_dictionary, f)

    cmds.select(clear=True)



cmds.file("/home/rapa/다운로드/shader.ma", i=True, type="mayaAscii", mergeNamespacesOnClash=False)


data = {"lambert1": ["teapot_gear2Shape", "teapot_gear3Shape", "teapot_gear9Shape", "teapot_gear_bolt2Shape", "teapot_gear1Shape", "teapot_gear_bolt1Shape", "teapot_gear10Shape", "teapot_gear4Shape", "teapot_gear6Shape", "teapot_gear12Shape", "teapot_gear8Shape", "teapot_gear7Shape", "teapot_gear_box1Shape", "teapot_gear13Shape", "teapot_gear11Shape", "teapot_gear_box2Shape", "teapot_gear_box3Shape", "teapot_gear5Shape"], "teapot_v001:aiStandardSurface1": ["teapot_body_leftShape"], "teapot_v001:aiStandardSurface2": ["teapot_leg2Shape", "teapot_leg1Shape"], "teapot_v001:aiStandardSurface3": ["teapot_gear_stick2Shape", "teapot_gear_stick1Shape"], "teapot_v001:aiStandardSurface4": ["teapot_body_rightShape"]}


cmds.connectAttr(


shader_data = {"lambert1": ["teapot_gear2Shape", "teapot_gear3Shape", "teapot_gear9Shape", "teapot_gear_bolt2Shape", "teapot_gear1Shape", "teapot_gear_bolt1Shape", "teapot_gear10Shape", "teapot_gear4Shape", "teapot_gear6Shape", "teapot_gear12Shape", "teapot_gear8Shape", "teapot_gear7Shape", "teapot_gear_box1Shape", "teapot_gear13Shape", "teapot_gear11Shape", "teapot_gear_box2Shape", "teapot_gear_box3Shape", "teapot_gear5Shape"], "teapot_v001:aiStandardSurface1": ["teapot_body_leftShape"], "teapot_v001:aiStandardSurface2": ["teapot_leg2Shape", "teapot_legShape"], "teapot_v001:aiStandardSurface3": ["teapot_gear_stick2Shape", "teapot_gear_stick1Shape"], "teapot_v001:aiStandardSurface4": ["teapot_body_rightShape"]}

object_list = cmds.ls(type="mesh")
all_shaders = cmds.ls(materials=True)

for shader, obj_list in shader_data.items():
    matching_shader = next((s for s in all_shaders if shader in s), None)
    if not matching_shader:
        continue
    for obj_name in obj_list:
        obj = next((s for s in object_list if obj_name in s), None)
        if not obj:
            continue
        cmds.select(obj, add=True)
    cmds.hyperShade(assign=matching_shader)
        # 이거 왜 안될까.... 열받



>>>>>>> de72e6917cd1764d643baa7246ac37fd1edbbffb
